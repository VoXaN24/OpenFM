// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

plugins {
  id "com.matthewprenger.cursegradle" version "1.0.7"
}
apply plugin: 'net.minecraftforge.gradle.forge'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
	maven {
        name = "OC repo mirror"
        url = "https://maven.cil.li//"
    }
}

configurations {
    shade
    compile.extendsFrom shade
}

def getGitRef() {
  try {
    def stdout = new ByteArrayOutputStream()
    exec {
      commandLine 'git', 'rev-parse', '--short', 'HEAD'
      standardOutput = stdout
    }
    return stdout.toString().trim()
  } catch (Throwable e) {
    return "unknown"
  }
}

dependencies {
    deobfCompile "li.cil.oc:OpenComputers:MC1.12.2-1.7.2.+"
	shade "javazoom:jlayer:1.0.1"
	shade "com.squareup.okhttp:okhttp:2.5.0"
	shade "com.googlecode.soundlibs:tritonus-share:0.3.7-2"
	compile "com.googlecode.soundlibs:mp3spi:1.9.5-1"
	compile "com.googlecode.soundlibs:vorbisspi:1.0.3-1"
	compile files('libs/jaad-0.8.5.jar')
}

if (System.getenv("PROMOTED_NUMBER") != null)
    ext.buildNumber = "${System.getenv("PROMOTED_NUMBER")}"
else if (System.getenv("BUILD_NUMBER") != null)
    ext.buildNumber = "${System.getenv("BUILD_NUMBER")}"
else
    ext.buildNumber = "+" + getGitRef()

version = "0.1.0"
group = "pcl.OpenFM"
archivesBaseName = "OpenFM-1.12.2"

minecraft {
    version = "1.12.2-14.23.5.2838"
    runDir = "run"
    mappings = "snapshot_20171003"
    useDepAts = true
	replace "@VERSION@", project.version
	replace "@BUILD@", project.ext.buildNumber
	makeObfSourceJar = false
}

version = "${version}.${project.ext.buildNumber}"
jar {
    configurations.shade.each { dep ->
        from(project.zipTree(dep)){
            exclude 'META-INF', 'META-INF/**'
        }
    }
}

def commonManifest = {
		mainAttributes( "FMLCorePlugin": "pcl.OpenFM.misc.OFMDepLoader",
						"FMLCorePluginContainsFMLMod": true) 
}
jar.manifest commonManifest

//def curseforge_key = 0
//def curse_changlog = "default"
// if (project.hasProperty('opensecurity_curseforge_key')) {
	//curseforge_key = project.opensecurity_curseforge_key
	//curse_changlog = project.promo-changelog
	//curse_changlog = project.changelog
//}

// curseforge {
	// apiKey = curseforge_key
	// project {
		// id = "236839"
		// releaseType = "release"
		// changelog = curse_changlog
		// addGameVersion '1.12.2'
	// }
// }

processResources {
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version + "." + project.ext.buildNumber, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

// this is needed for IntelliJ so we don't have to copy over the assets manually every time
idea {
    module {
        outputDir = file('build/classes/main')
    }
}

